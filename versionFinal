import numpy as np
import cv2 #Opencv

# Diseño de la imagen ----------------------------------------------

#img = cv2.imread('Pizarron.png', 1)
# Construcción de una imagen de 400x600 y RGB
Pizarra = 0 * np.ones((500, 500, 3), dtype=np.uint8)

# Linea (nombre_imagen,(a,b),(c,d),(B,G,R),Grosor)
# Desde (a,b) hasta (c,d), Donde (x,y)
# ------------- Azul
cv2.line(Pizarra,(0,0),(500,500),(255,0,0),20)
cv2.line(Pizarra,(0,0),(500,500),(225,0,0),10)
cv2.line(Pizarra,(0,0),(500,500),(200,0,0),3)
cv2.line(Pizarra,(500,0),(0,500),(255,0,0),20)
cv2.line(Pizarra,(500,0),(0,500),(225,0,0),10)
cv2.line(Pizarra,(500,0),(0,500),(200,0,0),3)

# Rectangulo (nombre_imagen,(a,b),(c,d),(B,G,R),Grosor)
# Desde (a,b) hasta (c,d), Donde (x,y)
# ------------- Blanco
cv2.rectangle(Pizarra,(50,50),(450,450),(255,255,255),20)
cv2.rectangle(Pizarra,(50,50),(450,450),(225,225,225),10)
cv2.rectangle(Pizarra,(50,50),(450,450),(200,200,200),3)

# Circulo (nombre_imagen,(a,b),radio,(B,G,R),Grosor)
# Centro (a,b)
# Para rellenar el area es con un -1
# ------------- Azul
cv2.circle(Pizarra,(250,250),140,(215,0,0),5)
cv2.circle(Pizarra,(250,250),135,(235,0,0),5)
cv2.circle(Pizarra,(250,250),130,(255,0,0),5)

# ------------- Verde
cv2.circle(Pizarra,(250,250),125,(0,175,0),5)
cv2.circle(Pizarra,(250,250),120,(0,195,0),5)
cv2.circle(Pizarra,(250,250),115,(0,215,0),5)
cv2.circle(Pizarra,(250,250),110,(0,235,0),5)
cv2.circle(Pizarra,(250,250),105,(0,255,0),5)

# ------------- Rojo
cv2.circle(Pizarra,(250,250),100,(0,0,255),5)
cv2.circle(Pizarra,(250,250),100,(0,0,225),4)
cv2.circle(Pizarra,(250,250),100,(0,0,200),3)
cv2.circle(Pizarra,(250,250),100,(0,0,175),2)
cv2.circle(Pizarra,(250,250),100,(0,0,150),1)
cv2.circle(Pizarra,(250,250),100,(0,0,255),-1)

#Para texto
font = cv2.FONT_HERSHEY_SIMPLEX
# (nombre_imagen,texto,ubicación,fondo,tamaño_texto,color,grosor,tipo_de_linea)
cv2.putText(Pizarra,'LGT',(200,270),font,2,(0,255,0),2,cv2.LINE_AA)

# Convertir la imagen RGB a HSV, que es HSV?? -----------------------------
hsv = cv2.cvtColor(Pizarra, cv2.COLOR_BGR2HSV)
# https://www.peko-step.com/es/tool/hsvrgb.html
# HSV -> [0 - 179, 0 - 255, 0 - 255]
# HSV -> [Matiz, Saturación, Valor]
hsv = cv2.cvtColor(Pizarra, cv2.COLOR_BGR2HSV)

# Definir intervalo del color para el Azul en HSV
azulbajo = np.array([110,255,200])  #[200,0,0] BGR
azulalto = np.array([120,255,255])  #[255,0,0]

# Definir intervalo del color para el Verde en HSV
verdebajo = np.array([50,255,175]) #[0,175,0]
verdealto = np.array([80,255,255]) #[0,255,0]

# Definir intervalo del color para el Rojo en HSV
rojobajo = np.array([0,255,150])    #[0,0,255]
rojoalto = np.array([10,255,255])    #[0,0,150]

# Definir intervalo del color para el Blanco en HSV
blancobajo = np.array([0,0,200])    #[200,200,200]
blancoalto = np.array([0,0,255])    #[255,255,255]

# Umbralizar la imagen HSV para obtener solo los rango de colores
mask1 = cv2.inRange(hsv, azulbajo, azulalto)
mask2 = cv2.inRange(hsv, verdebajo, verdealto)
mask3 = cv2.inRange(hsv, rojobajo, rojoalto)
mask4 = cv2.inRange(hsv, blancobajo, blancoalto)

# Bitwise (# Bit a bit) and mask and original image
Equis = cv2.bitwise_and(Pizarra, Pizarra, mask= mask1)
Circulo1 = cv2.bitwise_and(Pizarra, Pizarra, mask= mask2)
Circulo2 = cv2.bitwise_and(Pizarra, Pizarra, mask= mask3)
Cuadrado = cv2.bitwise_and(Pizarra, Pizarra, mask= mask4)

cv2.imshow('Pizarra', Pizarra)
cv2.waitKey(0)
cv2.imshow('HSV', hsv)
cv2.waitKey(0)
cv2.imshow('Azul', mask1)
cv2.waitKey(0)
cv2.imshow('Verde', mask2)
cv2.waitKey(0)
cv2.imshow('Rojo', mask3)
cv2.waitKey(0)
cv2.imshow('Blanco', mask4)
cv2.waitKey(0)
cv2.imshow('Equis Azul', Equis)
cv2.waitKey(0)
cv2.imshow('Cuadrado Blanco', Cuadrado)
cv2.waitKey(0)
cv2.imshow('Circulo Verde', Circulo1)
cv2.waitKey(0)
cv2.imshow('Circulo Rojo', Circulo2)
cv2.waitKey(0)
# ROI ----------------------------------------------
# Que es ROI?
ROI = cv2.selectROI(Pizarra)
print("Recorte es de: ", ROI)
# Pizarra_cropped
Pizarra_recortada = Pizarra[int(ROI[1]):int(ROI[1]+ROI[3]),
                    int(ROI[0]):int(ROI[0]+ROI[2])]

cv2.imshow('Imagen Recortada', Pizarra_recortada)
cv2.waitKey(0)
cv2.destroyAllWindow()

# Maneras de usar font
#cv2.putText(Pizarra,'LGT',(200,270),#fondo,2,(0,255,0),2,cv2.LINE_AA)
# El numero de fondo -> #fondo significa distintos tipos de letra
# 0 = cv2.FONT_HERSHEY_SIMPLEX
# 1 = cv2.FONT_HERSHEY_PLAIN
# 2 = cv2.FONT_HERSHEY_DUPLEX
# 3 = cv2.FONT_HERSHEY_COMPLEX
# 4 = cv2.FONT_HERSHEY_TRIPLEX
# 5 = cv2.FONT_HERSHEY_COMPLEX_SMALL
# 6 = cv2.FONT_HERSHEY_SCRIPT_SIMPLEX
# 7 = cv2.FONT_HERSHEY_SCRIPT_COMPLEX

# Extra
# Tamaño de la imagen 500 x 500
#Analiza 36 pixeles y sus colores de HSV
# for fila in range (20):
    # for columna in range (20):
        # print("Color", ": Fila:", + fila, "; Columna:", + columna, " -> ", str(hsv[fila, columna]))

#Conocer el valor del pixel (0 ,0) y (8,8)
# Va desde 0 hasta el tamaño de la imagen asi que
# Pienza en un numero menos 1
# Colores de Línea "Azul" -> Amarillo verde
#print("Color posición 0,0: "  + str(Pizarra[250,250]))
#print("Color posición 0,0: "  + str(Pizarra[364,364]))
#print("Color posición 0,0: "  + str(Pizarra[369,369]))
